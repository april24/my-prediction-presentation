shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
manipulate(myPlot(beta), beta = slider(0.6, 1.2, step = 0.02))
library(manipulate)
xlab = "parent",
xlab = "parent",
xlab = "parent"
myPlot <- function(beta){    y <- galton$child - mean(galton$child)    x <- galton$parent - mean(galton$parent)    freqData <- as.data.frame(table(x, y))    names(freqData) <- c("child", "parent", "freq")    plot(        as.numeric(as.vector(freqData$parent)),        as.numeric(as.vector(freqData$child)),        pch = 21, col = "black", bg = "lightblue",        cex = .15 * freqData$freq,        xlab = "parent",        ylab = "child"    )    abline(0, beta, lwd = 3)    points(0, 0, cex = 2, pch = 19)    mse <- mean( (y - beta * x)^2 )    title(paste("beta = ", beta, "mse = ", round(mse, 3)))}manipulate(myPlot(beta), beta = slider(0.6, 1.2, step = 0.02))
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
deployApp()
library(shinyapps)
deployApp()
setwd("~/coursera/data science/Developing Data Products/shiny application")
library(shinyapps)
deployApp()
deployApp()
shiny::runApp()
deployApp()
data(galton)
summary(galton)
library(UsingR);library(manipulate)
manipulate(myHist(beta),beta=slider(0.4,1.2,step=0.02))
manipulate(myHist(beta),beta=slider(0.4,1.2,step=0.02))
y<-galton$child - mean(galton$child)
x<-galton$parent - mean(galton$parent)
freqData <- as.data.frame(table(x, y))
names(freqData) <- c("child", "parent", "freq")
plot(as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child)),
pch = 21, col = "black", bg = "lightblue",
cex = .15 * freqData$freq,
xlab = "parent",ylab = "child")
abline(0, beta, lwd = 3)
y<-galton$child - mean(galton$child)
x<-galton$parent - mean(galton$parent)
freqData <- as.data.frame(table(x, y))
names(freqData) <- c("child", "parent", "freq")
plot(as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child)),
pch = 21, col = "black", bg = "lightblue",
cex = .15 * freqData$freq,
xlab = "parent",ylab = "child")
abline(0, 3, lwd = 3)
mse <- mean((y - beta*x)^2 )
library(UsingR);library(manipulate)
data(galton)
myHist<-function(beta){
y<-galton$child - mean(galton$child)
x<-galton$parent - mean(galton$parent)
freqData <- as.data.frame(table(x, y))
names(freqData) <- c("child", "parent", "freq")
plot(as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child)),
pch = 21, col = "black", bg = "lightblue",
cex = .15 * freqData$freq,
xlab = "parent",ylab = "child")
abline(0, beta, lwd = 3)
mse <- mean((y - beta*x)^2 )
title(paste("beta = ", input$beta, "mse = ", round(mse, 3)))
}
manipulate(myHist(beta),beta=slider(0.4,1.2,step=0.02))
title(paste("beta = ", beta, "mse = ", round(mse, 3)))
library(UsingR);library(manipulate)
data(galton)
myHist<-function(beta){
y<-galton$child - mean(galton$child)
x<-galton$parent - mean(galton$parent)
freqData <- as.data.frame(table(x, y))
names(freqData) <- c("child", "parent", "freq")
plot(as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child)),
pch = 21, col = "black", bg = "lightblue",
cex = .15 * freqData$freq,
xlab = "parent",ylab = "child")
abline(0, beta, lwd = 3)
mse <- mean((y - beta*x)^2 )
title(paste("beta = ", beta, "mse = ", round(mse, 3)))
}
manipulate(myHist(beta),beta=slider(0.4,1.2,step=0.02))
manipulate(myHist(beta),beta=slider(0.4,1.2,step=0.02))
freqData <- as.data.frame(table(galton$parent, galton$child))
names(freqData) <- c("child", "parent", "freq")
plot(as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child)),
pch = 21, col = "black", bg = "lightblue",
cex = .15 * freqData$freq,
xlab = "parent",ylab = "child")
?abline
myHist<-function( intercept,slope){
freqData <- as.data.frame(table(galton$parent, galton$child))
names(freqData) <- c("child", "parent", "freq")
plot(as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child)),
pch = 21, col = "black", bg = "lightblue",
cex = .15 * freqData$freq,
xlab = "parent",ylab = "child")
abline(intercept,  slope, lwd = 3)
mse <- mean((galton$child - galton$parent*slope-slope)^2 )
title(paste("intercept = ", intercept, ,"slope=",slope,mse = ", round(mse, 3)))
}
myHist<-function( intercept,slope){
freqData <- as.data.frame(table(galton$parent, galton$child))
names(freqData) <- c("child", "parent", "freq")
plot(as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child)),
pch = 21, col = "black", bg = "lightblue",
cex = .15 * freqData$freq,
xlab = "parent",ylab = "child")
abline(intercept,  slope, lwd = 3)
mse <- mean((galton$child - galton$parent*slope-slope)^2 )
title(paste("intercept = ", intercept, ,"slope=",slope,"mse = ", round(mse, 3)))
}
myHist<-function(a,b){
freqData <- as.data.frame(table(galton$parent, galton$child))
names(freqData) <- c("child", "parent", "freq")
plot(as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child)),
pch = 21, col = "black", bg = "lightblue",
cex = .15 * freqData$freq,
xlab = "parent",ylab = "child")
abline(a,b, lwd = 3)
mse <- mean((galton$child - galton$parent*a-b)^2 )
title(paste("intercept = ", a, ,"slope=",b,"mse = ", round(mse, 3)))
}
myHist(23,0.65)
myHist<-function(a,b){
freqData <- as.data.frame(table(galton$parent, galton$child))
names(freqData) <- c("child", "parent", "freq")
plot(as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child)),
pch = 21, col = "black", bg = "lightblue",
cex = .15 * freqData$freq,
xlab = "parent",ylab = "child")
abline(a,b, lwd = 3)
mse <- mean((galton$child - galton$parent*a-b)^2 )
title(paste("intercept =",a,"slope=",b,"mse = ", round(mse, 3)))
}
myHist(23,0.65)
manipulate(myHist(a,b),a=slider(-5,30,step=0.5),b=slider(0.4,1.2,step=0.02))
myHist<-function(a,b){
freqData <- as.data.frame(table(galton$parent, galton$child))
names(freqData) <- c("child", "parent", "freq")
plot(as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child)),
pch = 21, col = "black", bg = "lightblue",
cex = .15 * freqData$freq,
xlab = "parent",ylab = "child")
abline(a,b, lwd = 3)
mse <- mean((galton$child - galton$parent*b-a)^2 )
title(paste("intercept =",a,"slope=",b,"mse = ", round(mse, 3)))
}
manipulate(myHist(a,b),a=slider(-5,30,step=0.5),b=slider(0.4,1.2,step=0.02))
myHist<-function(a,b){
myHist(23,0.65)
}
manipulate(myHist(a,b),a=slider(-5,30,step=0.5),b=slider(0.4,1.2,step=0.02))
myHist<-function(a,b){
freqData <- as.data.frame(table(galton$parent, galton$child))
names(freqData) <- c("child", "parent", "freq")
plot(as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child)),
pch = 21, col = "black", bg = "lightblue",
cex = .15 * freqData$freq,
xlab = "parent",ylab = "child")
abline(a,b, lwd = 3)
mse <- mean((galton$child - galton$parent*b-a)^2 )
title(paste("intercept =",a,"slope=",b,"mse = ", round(mse, 3)))
}
myHist(23,0.6)
myHist(26.0.5)
myHist(26,0.5)
fit<-lm(child~parent,data=galton)
coef(fit)
myHist<-function(a,b){
freqData <- as.data.frame(table(galton$parent, galton$child))
names(freqData) <- c("child", "parent", "freq")
plot(as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child)),
pch = 21, col = "black", bg = "lightblue",
cex = .15 * freqData$freq,
xlab = "parent",ylab = "child")
abline(a,b,lwd = 3)
mse <- mean((galton$child - galton$parent*b-a)^2)
title(paste("intercept =",a,"slope=",b,"mse = ", round(mse, 3)))
}
myHist(23.0,64)
myHist(23,0.64)
manipulate(myHist(a,b),a=slider(10,30,step=0.5),b=slider(0.4,1.2,step=0.02))
abline(23,0.5)
ablint(23,0.6)
abline(23,0.6)
abline(24,0.6)
abline(23,1)
abline(23,5)
abline(23,0.8)
library(UsingR);library(manipulate)
data(galton)
myHist<-function(beta){
y<-galton$child - mean(galton$child)
x<-galton$parent - mean(galton$parent)
freqData <- as.data.frame(table(x, y))
names(freqData) <- c("child", "parent", "freq")
plot(as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child)),
pch = 21, col = "black", bg = "lightblue",
cex = .15 * freqData$freq,
xlab = "parent",ylab = "child")
abline(0, beta, lwd = 3)
mse <- mean((y - beta*x)^2 )
title(paste("beta = ", beta, "mse = ", round(mse, 3)))
}
manipulate(myHist(beta),beta=slider(0.4,1.2,step=0.02))
library(UsingR);library(manipulate)
data(galton)
myHist<-function(beta){
y<-galton$child - mean(galton$child)
x<-galton$parent - mean(galton$parent)
freqData <- as.data.frame(table(x, y))
names(freqData) <- c("child", "parent", "freq")
plot(as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child)),
pch = 21, col = "black", bg = "lightblue",
cex = .15 * freqData$freq,
xlab = "parent",ylab = "child")
abline(4, beta, lwd = 3)
mse <- mean((y - beta*x)^2 )
title(paste("beta = ", beta, "mse = ", round(mse, 3)))
}
manipulate(myHist(beta),beta=slider(0.4,1.2,step=0.02))
abline(4,3)
abline(4,2)
myHist<-function(a,b){
freqData <- as.data.frame(table(galton$parent, galton$child))
names(freqData) <- c("child", "parent", "freq")
plot(as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child)),
pch = 21, col = "black", bg = "lightblue",
cex = .15 * freqData$freq,
xlab = "parent",ylab = "child")
abline(a,b,lwd = 3)
mse <- mean((galton$child - galton$parent*b-a)^2)
title(paste("intercept =",a,"slope=",b,"mse = ", round(mse, 3)))
}
myHist<-function(a,b){
}
manipulate(myHist(a,b),a=slider(10,30,step=0.5),b=slider(0.4,1.2,step=0.02))
myHist<-function(a,b){
freqData <- as.data.frame(table(galton$parent, galton$child))
names(freqData) <- c("child", "parent", "freq")
plot(as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child)),
pch = 21, col = "black", bg = "lightblue",
cex = .15 * freqData$freq,
xlab = "parent",ylab = "child")
abline(a,b,lwd = 3)
mse <- mean((galton$child - galton$parent*b-a)^2)
title(paste("intercept =",a,"slope=",b,"mse = ", round(mse, 3)))
}
manipulate(myHist(a,b),a=slider(10,30,step=0.5),b=slider(0.4,1.2,step=0.02))
freqData <- as.data.frame(table(galton$parent, galton$child))
names(freqData) <- c("child", "parent", "freq")
plot(as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child)),
pch = 21, col = "black", bg = "lightblue",
cex = .15 * freqData$freq,
xlab = "parent",ylab = "child")
abline(23,5)
abline(23,0.6)
abline(23,0.7)
abline(23,0.55)
abline(23,0.65)
abline(23,0.66)
abline(23,0.67)
abline(23,0.68)
abline(23,0.69)
abline(23,0.68)
abline(25,0.7)
abline(1,2)
abline(a=23,b=0.6)
myHist<-function(a,b){
freqData <- as.data.frame(table(galton$parent, galton$child))
names(freqData) <- c("child", "parent", "freq")
plot(as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child)),
pch = 21, col = "black", bg = "lightblue",
cex = .15 * freqData$freq,
xlab = "parent",ylab = "child")
abline(a,b,lwd = 3)
mse <- mean((galton$child - galton$parent*b-a)^2)
title(paste("intercept =",a,"slope=",b,"mse = ", round(mse, 3)))
}
manipulate(myHist(a,b),a=slider(10,30,step=0.5),b=slider(0.4,1.2,step=0.02))
manipulate(myHist(a,b),a=slider(15,30,step=0.5),b=slider(0.4,1.2,step=0.02))
manipulate(myHist(a,b),a=slider(15,30,step=0.5),b=slider(0.5,1.2,step=0.02))
manipulate(myHist(a,b),a=slider(15,25,step=0.5),b=slider(0.5,0.9,step=0.02))
manipulate(myHist(a,b),a=slider(15,25,step=0.5),b=slider(0.5,0.9,step=0.02))
coef(fit)[1]
coef(fit)[2]
manipulate(myHist(a,b),a=slider(15,25,step=0.5),b=slider(0.5,0.9,step=0.02))
manipulate(myHist(a,b),a=slider(15,25,step=0.5),b=slider(0.5,0.9,step=0.025))
?plot
myHist<-function(a,b){
freqData <- as.data.frame(table(galton$parent, galton$child))
names(freqData) <- c("child", "parent", "freq")
plot(as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child)),
pch = 21, col = "black", bg = "lightblue",
cex = .15 * freqData$freq,
xlab = "parent",ylab = "child",
ylim=(0,72))
abline(a,b,lwd = 3)
mse <- mean((galton$child-galton$parent*b-a)^2)
title(paste("intercept =",a,"slope=",b,"mse = ", round(mse, 3)))
}
myHist<-function(a,b){
freqData <- as.data.frame(table(galton$parent, galton$child))
names(freqData) <- c("child", "parent", "freq")
plot(as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child)),
pch = 21, col = "black", bg = "lightblue",
cex = .15 * freqData$freq,
xlab = "parent",ylab = "child",
ylim=c(0,72))
abline(a,b,lwd = 3)
mse <- mean((galton$child-galton$parent*b-a)^2)
title(paste("intercept =",a,"slope=",b,"mse = ", round(mse, 3)))
}
manipulate(myHist(a,b),a=slider(15,25,step=0.5),b=slider(0.5,0.9,step=0.025))
myHist<-function(a,b){
freqData <- as.data.frame(table(galton$parent, galton$child))
names(freqData) <- c("child", "parent", "freq")
plot(as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child)),
pch = 21, col = "black", bg = "lightblue",
cex = .15 * freqData$freq,
xlab = "parent",ylab = "child",
xlim=c(0,80),ylim=c(0,80))
abline(a,b,lwd = 3)
mse <- mean((galton$child-galton$parent*b-a)^2)
title(paste("intercept =",a,"slope=",b,"mse = ", round(mse, 3)))
}
manipulate(myHist(a,b),a=slider(15,25,step=0.5),b=slider(0.5,0.9,step=0.025))
myHist<-function(a,b){
freqData <- as.data.frame(table(galton$parent, galton$child))
names(freqData) <- c("child", "parent", "freq")
plot(as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child)),
pch = 21, col = "black", bg = "lightblue",
cex = .15 * freqData$freq,
xlab = "parent",ylab = "child")
abline(a,b,lwd = 3)
mse <- mean((galton$child-galton$parent*b-a)^2)
title(paste("intercept =",a,"slope=",b,"mse = ", round(mse, 3)))
}
manipulate(myHist(a,b),a=slider(15,25,step=0.5),b=slider(0.5,0.9,step=0.025))
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
setwd("~/coursera/data science/Developing Data Products/prediction")
deployApp()
setwd("~/coursera/data science/Developing Data Products")
author("prediction")
library(slidify)
author("prediction")
setwd("~/coursera/data science/DDD")
author"prediction"
author("prediction")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
?par
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
coef(fit)[1]
as.data.frame(table(galton$parent, galton$child))
names(freqData) <- c("child", "parent", "freq")
plot(as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child)),
pch = 21, col = "black", bg = "lightblue",
cex = .15 * freqData$freq,
xlab = "parent",ylab = "child")
abline(coef(fit)[1],coef(fit)[2],lwd = 3)
mse <- mean((galton$child-galton$parent*coef(fit)[2]-coef(fit)[1])^2)
title(paste("intercept =",coef(fit)[1],"slope=",coef(fit)[2],"mse = ", round(mse, 3))
)
as.data.frame(table(galton$parent, galton$child))
names(freqData) <- c("child", "parent", "freq")
plot(as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child)),
pch = 21, col = "black", bg = "lightblue",
cex = .15 * freqData$freq,
xlab = "parent",ylab = "child")
abline(coef(fit)[1],coef(fit)[2],lwd = 3)
mse <- mean((galton$child-galton$parent*coef(fit)[2]-coef(fit)[1])^2)
title(paste("intercept =",round(coef(fit)[1],3),
"slope=",round(coef(fit)[2],3),
"mse = ", round(mse, 3)))
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
setwd("~/coursera/data science/Developing Data Products/prediction")
DeployApp()
deployApp()
setwd("~/coursera/data science/DDD/prediction")
slidify("index.Rmd")
slidify("index.Rmd")
setwd("~/coursera/data science/DDD/prediction")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
mathjax
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
{Yi-(a+b*Xi)^2}$
a
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")\
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
publish(user="april24",repo="prediction")
